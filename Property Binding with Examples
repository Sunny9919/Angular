The Property Binding in Angular Application is used to bind the values of component or model properties to the HTML element. Depending on the values,
it will change the existing behavior of the HTML element. The syntax to use property is: [property] = ‘expression’

 please modify the app.component.ts file as shown below to use the property binding to bind the component property values to the HTML elements property.

import { Component } from '@angular/core';
@Component({
   selector: 'app-root',
    template: `<div>
                    <span [innerHTML] = 'Title' ></span>   
               </div>`
})

export class AppComponent {
  Title : string = "Welcome to Angular Tutorials";
}

------------------------------------------------------------
import { Component } from '@angular/core';
@Component({
  selector: 'app-root',
    template: `<div>
                    <img [src] = 'ImagePath' />                
               </div>`
})
export class AppComponent {
  ImagePath : string = "https://dotnettutorials.net/wp-content/uploads/2019/09/cropped-dotnettutorials.png";
}

--------------------------------------------------------------------------------
Providing Security to Malicious Content:
In the following example, we are using angular interpolation to bind the malicious <script> tag.

import { Component } from '@angular/core';
@Component({
  selector: 'app-root',
    template: `<div>
                    {{MaliciousData}}           
               </div>`
})
export class AppComponent {
  MaliciousData : string = "Hello <script>alert('your application is hacked')</script>";
}

-----------------------------------------------------------------------
In the below example we are using property binding

import { Component } from '@angular/core';
@Component({
  selector: 'app-root',
    template: `<div [innerHTML] = 'MaliciousData'>         
               </div>`
})
export class AppComponent {
  MaliciousData : string = "Hello <script>alert('your application is hacked')</script>";
}
